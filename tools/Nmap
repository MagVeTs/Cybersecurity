Nmap Scripting Engine
https://www.youtube.com/watch?v=M-Uq7YSfZ4I
[hat tip: Jonathan Erez]

-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
TCP Header Flags [important for understanding various types of Nmap scans]
--------------------------------------------------------------------------
From: https://tryhackme.com/room/nmap02 ; Task 3 --
"TCP header flags are:

1. URG: Urgent flag indicates that the urgent pointer filed is significant. The urgent pointer indicates that the incoming data is urgent, and that a TCP segment with the URG flag set is processed immediately without consideration of having to wait on previously sent TCP segments.
2. ACK: Acknowledgement flag indicates that the acknowledgement number is significant. It is used to acknowledge the receipt of a TCP segment.
3. PSH: Push flag asking TCP to pass the data to the application promptly.
4. RST: Reset flag is used to reset the connection. Another device, such as a firewall, might send it to tear a TCP connection. This flag is also used when data is sent to a host and there is no service on the receiving end to answer.
5. SYN: Synchronize flag is used to initiate a TCP 3-way handshake and synchronize sequence numbers with the other host. The sequence number should be set randomly during TCP connection establishment.
6. FIN: The sender has no more data to send."
----------------------------------------------------------------------------

Host Discovery [from: https://tryhackme.com/room/nmap01 (with some editing and additions)]
------------------------------------------------------------------------------------------

Nmap target specification options:
- list: 10.11.12.15 scanme.nmap.org example.com will scan 3 IP addresses.
- range: 10.11.12.15-20 will scan 6 IP addresses: 10.11.12.15, 10.11.12.16,… and 10.11.12.20.
- subnet: TARGET_MACHINE_IP/30 will scan 4 IP addresses.
You can also provide a file as input for your list of targets, e.g.: nmap -iL list_of_hosts.txt

TIP:
In order to check the list of hosts that Nmap will scan (helpful for situations where you are planning to scan a subnet and do not want to calculate the IP addresses in that subnet - Nmap will do the math for you and list all the possible IPs in the subnet you gave), use:
nmap -sL TARGETS.
(this option will give you a detailed list of the hosts that Nmap will scan without scanning them; however, Nmap will attempt a reverse-DNS resolution on all the targets to obtain their names. Names might reveal various information to the pentester. [If you don’t want Nmap to the DNS server, you can add -n.])

Nmap Host Discovery Scan Types (i.e. without port scans) With Example Command
-------------------------------------
1) ARP Scan:	sudo nmap -PR -sn TARGET_MACHINE_IP/24
[ARP scans only allowed for root and sudoers; ARP scans only work for machines in your own subnet; there is also a dedicated ARP scan tool called arp-scan (http://www.royhills.co.uk/wiki/index.php/Main_Page]); to install it on Linux, use: apt install arp-scan]
2) ICMP Echo Scan:	sudo nmap -PE -sn TARGET_MACHINE_IP/24 [may be blocked by firewalls - worth trying all ICMP types in case one isn't blocked]
3) ICMP Timestamp Scan:	sudo nmap -PP -sn TARGET_MACHINE_IP/24 [may be blocked by firewalls - worth trying all ICMP types in case one isn't blocked]
4) ICMP Address Mask Scan:	sudo nmap -PM -sn TARGET_MACHINE_IP/24 [may be blocked by firewalls - worth trying all ICMP types in case one isn't blocked]
5) TCP SYN Ping Scan:	sudo nmap -PS22,80,443 -sn TARGET_MACHINE_IP/30 [will work even for unprivileged users; however, only root/sudoers can avoid completion of 3-way handshake]
6) TCP ACK Ping Scan:	sudo nmap -PA22,80,443 -sn TARGET_MACHINE_IP/30 [only available for root/sudoers]
7) UDP Ping Scan:	sudo nmap -PU53,161,162 -sn TARGET_MACHINE_IP/30 [if the port is closed this generates an ICMP Type 3, Code 3 (port unreachable response) - then you know the host is up; if no response is received you do not know if the host is down or the host is up but the port is open; therefore, it is important to send the UDP Ping Scan specifically to weird ports that would probably be closed (if you are using it for host discovery purposes)]

Option	- Purpose
-n	      no reverse-DNS lookup
-R	      do reverse-DNS lookup for ALL hosts (including those presently offline)
-sn	      perform host discovery only; do not scan for open ports
--------------------------------------------------------------------------------------
masscan
---------
masscan is a scanning tool similar to Nmap. However, it is quicker because its packet generating rate is aggressive. Install on Linux with: apt install masscan.
Example syntax:
masscan MACHINE_IP/24 -p443
masscan MACHINE_IP/24 -p80,443
masscan MACHINE_IP/24 -p22-25
masscan MACHINE_IP/24 ‐‐top-ports 100 
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------

Port Scanning - from: https://tryhackme.com/room/nmap02 [with some editing and additions]
-----------------------------------------------------------------------------------------
Six Port States in Nmap
-----------------------
1) Open: indicates that a service is listening on the specified port.
2) Closed: indicates that no service is listening on the specified port, although the port is accessible. By accessible, we mean that it is reachable and is not blocked by a firewall or other security appliances/programs.
3) Filtered: means that Nmap cannot determine if the port is open or closed because the port is not accessible. This state is usually due to a firewall preventing Nmap from reaching that port. Nmap’s packets may be blocked from reaching the port; alternatively, the responses are blocked from reaching Nmap’s host.
4) Unfiltered: means that Nmap cannot determine if the port is open or closed, although the port is accessible. This state is encountered when using an ACK scan -sA.
5) Open|Filtered: This means that Nmap cannot determine whether the port is open or filtered.
6) Closed|Filtered: This means that Nmap cannot decide whether a port is closed or filtered.


Port Scan Type     |	  Example Command
1) TCP Connect Scan	    nmap -sT TARGET_MACHINE_IP
[available even for unprivileged users; completes 3-way handshake before sending RST packet]
2) TCP SYN Scan	        sudo nmap -sS TARGET_MACHINE_IP
[available only for privileged users (root/sudoers); default Nmap scan; does not complete 3-way handshake; instead, sends RST immediately after receiving ACK reply to its SYN packet; by not completing 3-way handshake this scan may avoid getting logged by target]
3) UDP Scan	            sudo nmap -sU TARGET_MACHINE_IP
[since UDP is connectionless protocol, Nmap knows port is closed if it receives IMCP type 3 (destination unreachable/code 3 (port unreachable) message; no message means port open (or perhaps port is being filtered by a firewall)]
4) TCP Null Scan	      sudo nmap -sN TARGET_MACHINE_IP [no flags set; closed port will respond with RST; open/filtered port will trigger no response] 
5) TCP FIN Scan	        sudo nmap -sF TARGET_MACHINE_IP [FIN flag set; closed port will respond with RST; open/filtered port will trigger no response] 
6) TCP Xmas Scan	      sudo nmap -sX TARGET_MACHINE_IP [FIN, PSH, and URG flags set; closed port will respond with RST; open/filtered port will trigger no response] 
7) TCP Maimon Scan	    sudo nmap -sM TARGET_MACHINE_IP [FIN and ACK flags set; closed and open ports will both respond with RST packet; some BSD systems will not repond if the port is open; not usually used with modern systems]
8) TCP ACK Scan	        sudo nmap -sA TARGET_MACHINE_IP [ACK flag set; closed and open ports will both respond with RST packet; however, if there is a firewall you may be able to learn which ports are unfiltered; note: this does not clarify whether these ports are open or closed and merely not being filtered by firewall rules]
9) TCP Window Scan	    sudo nmap -sW TARGET_MACHINE_IP [ACK flag set; closed and open ports will both respond with RST packet; Nmap examines the TCP Window field of the RST responses; based on the TCP Window, Nmap may list certain ports as "closed" - this may indicate that there is a firewall and these specific ports are NOT filtered; note: this does not clarify whether these ports are open or closed and merely not being filtered by firewall rules]
10) Custom TCP Scan	    sudo nmap --scanflags URGACKPSHRSTSYNFIN TARGET_MACHINE_IP [only beneficial if you know how to interpret the response you receive]


Spoofed Source IP	sudo nmap -S SPOOFED_IP TARGET_MACHINE_IP
"In some network setups, you will be able to scan a target system using a spoofed IP address and even a spoofed MAC address. Such a scan is only beneficial in a situation where you can guarantee to capture the response. If you try to scan a target from some random network using a spoofed IP address, chances are you won’t have any response routed to you, and the scan results could be unreliable.

Spoofed MAC Address	--spoof-mac SPOOFED_MAC
Decoy Scan	nmap -D DECOY_IP,ME TARGET_MACHINE_IP
Idle (Zombie) Scan	sudo nmap -sI ZOMBIE_IP TARGET_MACHINE_IP
Fragment IP data into 8 bytes	-f
Fragment IP data into 16 bytes	-ff



Option        |         Purpose
-p-	                    all ports
-p1-1023                scan ports 1 to 1023
-F	                    100 most common ports
--top-ports 10          will check the ten most common ports.
-r	                    scan ports in consecutive order
-T<0-5>	                -T0 being the slowest and T5 the fastest
--max-rate 50	          rate <= 50 packets/sec
--min-rate 15	          rate >= 15 packets/sec
--min-parallelism 100	  at least 100 probes in parallel
--source-port PORT_NUM  specify source port number
--data-length NUM       append random data to reach given length [may help avoid IDS/firewalls triggered by expected malicious packet lengths]
--reason	              explains how Nmap made its conclusion
-v	                    verbose [gives more details about scan]
-vv	                    very verbose [gives even more details about scan]
-d	                    debugging [gives more details about scan]
-dd	                    more details for debugging [gives even more details about scan]

Scan Rates and Stealthiness
---------------------------
"You can control the scan timing using -T<0-5>. -T0 is the slowest (paranoid), while -T5 is the fastest. According to Nmap manual page, there are six templates:
paranoid (0)
sneaky (1)
polite (2)
normal (3)
aggressive (4)
insane (5)
To avoid IDS alerts, you might consider -T0 or -T1. For instance, -T0 scans one port at a time and waits 5 minutes between sending each probe, so you can guess how long scanning one target would take to finish. If you don’t specify any timing, Nmap uses normal -T3. Note that -T5 is the most aggressive in terms of speed; however, this can affect the accuracy of the scan results due to the increased likelihood of packet loss. Note that -T4 is often used during CTFs and when learning to scan on practice targets, whereas -T1 is often used during real engagements where stealth is more important."

