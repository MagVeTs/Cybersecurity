OpenSSL
-------
see: https://www.openssl.org/

from: https://tryhackme.com/room/cryptographyintro ; "Symmetric Cryptography" - Task 2

syntax:

$ openssl aes-256-cbc -e -in message.txt -out encrypted_message
# encrypts the file named "message.txt" and outputs it as a file called "encrypted_message"

$ openssl aes-256-cbc -d -in encrypted_message -out original_message.txt
# decrypts the encrypted file named "encrypted_message" and outputs the decrypted text as a file called "original_message.txt"

$ openssl aes-256-cbc -pbkdf2 -iter <NUMBER> -e -in message.txt -out encrypted_message
# encrypts; the `-pbkdf2` argument uses Password-Based Key Derivation Function 2 (PBKDF2) to add protection against brute-force attacks; the `-iter` argument chooses how many times to iterate the password in order to create the encryption key (e.g. `-iter 10000` will iterate 10,000 times)

$ openssl aes-256-cbc -pbkdf2 -iter 10000 -d -in encrypted_message -out original_message.txt
# decrypts a file that has been encrypted with 10,000 iterations

